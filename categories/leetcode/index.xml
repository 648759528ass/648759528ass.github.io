<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Leetcode on Jhas's Blog</title><link>https://blog.jhas.site/categories/leetcode/</link><description>Recent content in Leetcode on Jhas's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 14 Feb 2022 07:48:38 +0800</lastBuildDate><atom:link href="https://blog.jhas.site/categories/leetcode/index.xml" rel="self" type="application/rss+xml"/><item><title>20220214 每日一题 Leetcode540 有序数组中的单一元素</title><link>https://blog.jhas.site/p/20220214-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode540-%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%8D%95%E4%B8%80%E5%85%83%E7%B4%A0/</link><pubDate>Mon, 14 Feb 2022 07:48:38 +0800</pubDate><guid>https://blog.jhas.site/p/20220214-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode540-%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%8D%95%E4%B8%80%E5%85%83%E7%B4%A0/</guid><description>540. 有序数组中的单一元素 题面 给你一个仅由整数组成的有序数组，其中每个元素都会出现两次，唯有一个数只会出现一次。
请你找出并返回只出现一次的那个数。
你设计的解决方案必须满足 $O(\log n)$ 时间复杂度和 $O(1)$ 空间复杂度。
呜呜呜，破防了。我就是这个单一元素吧QAQ
解析 如果不在意题的$ O(\log n) $特殊要求的话，其实可以直接对整个数组异或和即可得到这单一元素(成双成对的元素都各自领走自己的另一半出去约会去了，就剩这单一元素QAQ)
回到题面上，按着题面的$O(\log n)$要求的话则是需要用到二分。属于是一道非常经典的二段性分析的题。
假设单一元素的下标为 $ k $ , 则有下列条件
设$ \forall i \in N, 2i &amp;lt; k $
那么有 $ nums[2i] == nums[2i+1] $
且对于$ \forall i \in N, 2i &amp;gt; k $
有$ nums[2i] == nums[2i-1] $
可以说$nums[k]$干扰了成对数组的序列，使其的规律改变，使数组的性质变成了二段。
至此其实已经分析完毕了一种做法:对偶数下标进行二分。
为了减少代码量，我们将偶数做法扩展到自然数做法。
设$ \forall i \in N , i &amp;lt; k$
若$i$为奇数则$nums[i] == nums[i-1]$
若$i$为偶数则$ nums[i] == nums[i+1] $</description></item><item><title>20220213 Leetcode280周赛</title><link>https://blog.jhas.site/p/20220213-leetcode280%E5%91%A8%E8%B5%9B/</link><pubDate>Sun, 13 Feb 2022 12:14:10 +0800</pubDate><guid>https://blog.jhas.site/p/20220213-leetcode280%E5%91%A8%E8%B5%9B/</guid><description>Leetcode第280场周赛 题一-6004. 得到 0 的操作数 题面 给你两个 非负 整数 num1 和 num2 。
每一步 操作 中，如果 num1 &amp;gt;= num2 ，你必须用 num1 减 num2 ；否则，你必须用 num2 减 num1 。
解析 没啥好说的，模拟就完事了。更相减损术
解法 1 2 3 4 5 6 7 8 class Solution { public: int countOperations(int num1, int num2) { if(num1 == 0 || num2 == 0) return 0; if(num1&amp;gt;=num2) return 1 + countOperations(num2,num1-num2); return 1 + countOperations(num1,num2-num1); } }; 题二-6005.</description></item><item><title>20220213 每日一题 Leetcode1189 气球的最大数量</title><link>https://blog.jhas.site/p/20220213-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode1189-%E6%B0%94%E7%90%83%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F/</link><pubDate>Sat, 12 Feb 2022 23:06:52 +0800</pubDate><guid>https://blog.jhas.site/p/20220213-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode1189-%E6%B0%94%E7%90%83%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F/</guid><description>1189. “气球” 的最大数量 题面 给你一个字符串 text，你需要使用 text 中的字母来拼凑尽可能多的单词 &amp;ldquo;balloon&amp;rdquo;（气球）。
字符串 text 中的每个字母最多只能被使用一次。请你返回最多可以拼凑出多少个单词 &amp;ldquo;balloon&amp;rdquo;。
解析 超级白给题,直接记录每一个小写字母大小，然后对应字母数量除以每个字母数量取最小值即可。
解法 时间复杂度:$O(n)$
1 2 3 4 5 6 7 8 9 10 11 12 class Solution { public: int maxNumberOfBalloons(string text) { int st[26] = {}; for(auto &amp;amp; c : text){ st[c - &amp;#39;a&amp;#39;]++; } st[&amp;#39;l&amp;#39; - &amp;#39;a&amp;#39;]/=2; st[&amp;#39;o&amp;#39; - &amp;#39;a&amp;#39;]/=2; return min(min(st[&amp;#39;b&amp;#39; - &amp;#39;a&amp;#39;],min(st[&amp;#39;l&amp;#39; - &amp;#39;a&amp;#39;],st[&amp;#39;o&amp;#39; - &amp;#39;a&amp;#39;])),min(st[0],st[&amp;#39;n&amp;#39; - &amp;#39;a&amp;#39;])); } }; 如果将balloon扩展到任意字符串，则为</description></item><item><title>20220212 每日一题 Leetcode1020 飞地的数量</title><link>https://blog.jhas.site/p/20220212-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode1020-%E9%A3%9E%E5%9C%B0%E7%9A%84%E6%95%B0%E9%87%8F/</link><pubDate>Sat, 12 Feb 2022 09:50:17 +0800</pubDate><guid>https://blog.jhas.site/p/20220212-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode1020-%E9%A3%9E%E5%9C%B0%E7%9A%84%E6%95%B0%E9%87%8F/</guid><description>1020. 飞地的数量 题面 给你一个大小为 $m * n$ 的二进制矩阵 $grid$ ，其中 $0$ 表示一个海洋单元格、$1$ 表示一个陆地单元格。
一次 移动 是指从一个陆地单元格走到另一个相邻（上、下、左、右）的陆地单元格或跨过 $grid$ 的边界。
返回网格中 无法 在任意次数的移动中离开网格边界的陆地单元格的数量。
解析 题目非常白给，求无法 在任意次数的移动中离开网格边界的陆地单元格的数量，也即不与边界有相联的联通块，这时我们有两种思路：
从边界块出发，看看边界块延伸的最长块 从每一块陆地块出发，看看是否能到边界 两种情况正好对应了两种解法:
多源dfs/bfs 并查集 解法一 dfs和bfs在这题的情况下效果是一样的，首先记录下每一个边界陆地块，然后从边界陆地块出发搜索陆地块，如果可以碰到则把碰到的块1变为0，最后遍历grid标记其值为1的数量。
由于我们每次碰到后都会把1标为0，所以每一个块实际入 栈/队列 次数为 $n*m$
所以时间复杂度:$O(mn)$
代码如下:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 class Solution { int tx[4] = {1,-1,0,0}; int ty[4] = {0,0,1,-1}; public: int numEnclaves(vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt;&amp;amp; grid) { int n = grid.</description></item><item><title>20220211 每日一题 Leetcode1984 学生分数的最小差值</title><link>https://blog.jhas.site/p/20220211-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode1984-%E5%AD%A6%E7%94%9F%E5%88%86%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC/</link><pubDate>Fri, 11 Feb 2022 12:56:58 +0800</pubDate><guid>https://blog.jhas.site/p/20220211-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode1984-%E5%AD%A6%E7%94%9F%E5%88%86%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC/</guid><description>1984. 学生分数的最小差值 题面 给你一个 下标从 0 开始 的整数数组 $nums$ ，其中 $nums[i]$ 表示第 $i$ 名学生的分数。另给你一个整数 $k$ 。
从数组中选出任意 $k$ 名学生的分数，使这 $k$ 个分数间 最高分 和 最低分 的 差值 达到 最小化 。
返回可能的 最小差值 。
解析 若使$k$名学生的分数差值达到最小化，从$nums$取$k$个数，如果这$k$个数正好是最大最小数差值最小化，则$nums$必无其它数在这$k$个数之间。显然若使从$nums$取出任意$i$都满足从$i$后取$k$个数差值最小化，则数组必然有序。
解法 将数组排序然后枚举$i$滑动窗口即可
时间复杂度: $O( n \log n)$
1 2 3 4 5 6 7 8 9 10 11 12 class Solution { public: int minimumDifference(vector&amp;lt;int&amp;gt;&amp;amp; nums, int k) { int i,n = nums.size(),ans; sort(nums.begin(),nums.end()); ans = 100010; for(i = k - 1;i&amp;lt;n;i++){ ans = min(ans,nums[i] - nums[i - k + 1]); } return ans; } };</description></item><item><title>20220210 每日一题 Leetcode1447 最简分数</title><link>https://blog.jhas.site/p/20220210-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode1447-%E6%9C%80%E7%AE%80%E5%88%86%E6%95%B0/</link><pubDate>Thu, 10 Feb 2022 08:40:23 +0800</pubDate><guid>https://blog.jhas.site/p/20220210-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode1447-%E6%9C%80%E7%AE%80%E5%88%86%E6%95%B0/</guid><description>1447. 最简分数 题面 给你一个整数 n ，请你返回所有 0 到 1 之间（不包括 0 和 1）满足分母小于等于 n 的 最简 分数 。分数可以以 任意 顺序返回。
解析 非常简单的暴力数论题，对于任意 $ i$ $j $ 来说，满足 $ 0&amp;lt; j/i &amp;lt;1 $ 即满足 $ j &amp;lt; i $ ,考虑到 $ 1\leq n \leq 100 $ 则只需暴力枚举每一个 $i$,$j$ 即可得出答案，对于任意$i$,$j$ ，满足$ j/i $为最简分数，即两数不可同时除以任意数且结果为整数，即两数互质，等价于 $ gcd(i,j) = 1 $
解法 时间复杂度:$ O(n^2\log n) $
代码如下:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Solution { public: vector&amp;lt;string&amp;gt; simplifiedFractions(int n) { vector&amp;lt;string&amp;gt; ret; for(int i = 2;i&amp;lt;=n;i++){ for(int j = 1;j&amp;lt;i;j++){ if(__gcd(i,j) == 1){ ret.</description></item><item><title>20220209 每日一题 Leetcode2006 差的绝对值为K的数对数目</title><link>https://blog.jhas.site/p/20220209-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode2006-%E5%B7%AE%E7%9A%84%E7%BB%9D%E5%AF%B9%E5%80%BC%E4%B8%BAk%E7%9A%84%E6%95%B0%E5%AF%B9%E6%95%B0%E7%9B%AE/</link><pubDate>Wed, 09 Feb 2022 20:42:21 +0800</pubDate><guid>https://blog.jhas.site/p/20220209-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode2006-%E5%B7%AE%E7%9A%84%E7%BB%9D%E5%AF%B9%E5%80%BC%E4%B8%BAk%E7%9A%84%E6%95%B0%E5%AF%B9%E6%95%B0%E7%9B%AE/</guid><description>2006. 差的绝对值为 K 的数对数目 题面 给你一个整数数组 nums 和一个整数 k ，请你返回数对 (i, j) 的数目，满足 i &amp;lt; j 且 |nums[i] - nums[j]| == k 。
|x| 的值定义为：
如果 x &amp;gt;= 0 ，那么值为 x 。 如果 x &amp;lt; 0 ，那么值为 -x 。
解析 题目非常白给，照着题目意思顺下去分析即可
对于 $$ |nums[i] - nums[j]| = k $$ 拆解后有两种可能 $$ nums[i] = k + nums[j] $$ 与 $$ nums[i] = nums[j] - k $$ 既对于任意 $ j $ 只需要统计到 $ i&amp;lt;j $ 的数目即可</description></item></channel></rss>