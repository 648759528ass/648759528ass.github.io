<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>easy on Jhas's Blog</title><link>https://blog.jhas.site/tags/easy/</link><description>Recent content in easy on Jhas's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 26 Feb 2022 11:26:17 +0800</lastBuildDate><atom:link href="https://blog.jhas.site/tags/easy/index.xml" rel="self" type="application/rss+xml"/><item><title>20220226 每日一题 Leetcode2016 增量元素之间的最大差值</title><link>https://blog.jhas.site/p/20220226-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode2016-%E5%A2%9E%E9%87%8F%E5%85%83%E7%B4%A0%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC/</link><pubDate>Sat, 26 Feb 2022 11:26:17 +0800</pubDate><guid>https://blog.jhas.site/p/20220226-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode2016-%E5%A2%9E%E9%87%8F%E5%85%83%E7%B4%A0%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC/</guid><description>2016. 增量元素之间的最大差值 题面 给你一个下标从 $0$ 开始的整数数组 $nums$ ，该数组的大小为 $n$ ，请你计算 $nums[j] - nums[i]$ 能求得的 最大差值 ，其中 $0 &amp;lt;= i &amp;lt; j &amp;lt; n$ 且 $nums[i] &amp;lt; nums[j]$ 。
返回 最大差值 。如果不存在满足要求的 $i$ 和 $j$ ，返回 $-1$ 。
解析 简单得很，对于每个数，维护其前面数字最小值，然后如果这个最小值比当前数小，则将其减最小数即可
解法 时间复杂度: $O(n)$
1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Solution { public: int maximumDifference(vector&amp;lt;int&amp;gt;&amp;amp; nums) { int pre_min = 1e9+1; int ans = -1; for(int i = 0;i&amp;lt;nums.</description></item><item><title>20220223 每日一题 Leetcode917 仅仅反转字母</title><link>https://blog.jhas.site/p/20220223-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode917-%E4%BB%85%E4%BB%85%E5%8F%8D%E8%BD%AC%E5%AD%97%E6%AF%8D/</link><pubDate>Wed, 23 Feb 2022 09:30:22 +0800</pubDate><guid>https://blog.jhas.site/p/20220223-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode917-%E4%BB%85%E4%BB%85%E5%8F%8D%E8%BD%AC%E5%AD%97%E6%AF%8D/</guid><description>917. 仅仅反转字母 题面 给你一个字符串 s ，根据下述规则反转字符串：
所有非英文字母保留在原有位置。 所有英文字母（小写或大写）位置反转。 返回反转后的 s 。
解析 按题面双指针模拟即可。
有点像快排里的交换(部分像)。
每个用了的指针向前/向后一位,碰到不是字母的指针也移动.
解法 时间复杂度:$ O(n) $
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class Solution { public: string reverseOnlyLetters(string s) { int l=0,r = s.size(); while(l&amp;lt;r){ if((s[l]&amp;lt;&amp;#39;A&amp;#39;||s[l]&amp;gt;&amp;#39;Z&amp;#39;)&amp;amp;&amp;amp;(s[l]&amp;lt;&amp;#39;a&amp;#39;||s[l]&amp;gt;&amp;#39;z&amp;#39;)){ l++; } else if((s[r]&amp;lt;&amp;#39;A&amp;#39;||s[r]&amp;gt;&amp;#39;Z&amp;#39;)&amp;amp;&amp;amp;(s[r]&amp;lt;&amp;#39;a&amp;#39;||s[r]&amp;gt;&amp;#39;z&amp;#39;)){ r--; }else{ swap(s[l++], s[r--]); } } return s; } };</description></item><item><title>20220220 每日一题 Leetcode717 1比特与2比特字符</title><link>https://blog.jhas.site/p/20220220-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode717-1%E6%AF%94%E7%89%B9%E4%B8%8E2%E6%AF%94%E7%89%B9%E5%AD%97%E7%AC%A6/</link><pubDate>Sun, 20 Feb 2022 10:55:44 +0800</pubDate><guid>https://blog.jhas.site/p/20220220-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode717-1%E6%AF%94%E7%89%B9%E4%B8%8E2%E6%AF%94%E7%89%B9%E5%AD%97%E7%AC%A6/</guid><description>717. 1比特与2比特字符 题面 有两种特殊字符：
第一种字符可以用一个比特 0 来表示
第二种字符可以用两个比特(10 或 11)来表示
给定一个以 0 结尾的二进制数组 bits ，如果最后一个字符必须是一位字符，则返回 true 。
解析 简简单单模拟即可
解法 时间复杂度: $ O(n) $
1 2 3 4 5 6 7 8 9 10 class Solution { public: bool isOneBitCharacter(vector&amp;lt;int&amp;gt;&amp;amp; bits) { for(int i = 0;i&amp;lt;bits.size();i++){ if(i == bits.size() - 1) return true; if(bits[i] == 1) i++; } return false; } };</description></item><item><title>20220218 每日一题 Leetcode1791 找出星型图的中心节点</title><link>https://blog.jhas.site/p/20220218-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode1791-%E6%89%BE%E5%87%BA%E6%98%9F%E5%9E%8B%E5%9B%BE%E7%9A%84%E4%B8%AD%E5%BF%83%E8%8A%82%E7%82%B9/</link><pubDate>Fri, 18 Feb 2022 08:37:24 +0800</pubDate><guid>https://blog.jhas.site/p/20220218-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode1791-%E6%89%BE%E5%87%BA%E6%98%9F%E5%9E%8B%E5%9B%BE%E7%9A%84%E4%B8%AD%E5%BF%83%E8%8A%82%E7%82%B9/</guid><description>1791. 找出星型图的中心节点 题面 有一个无向的 星型 图，由 n 个编号从 1 到 n 的节点组成。星型图有一个 中心 节点，并且恰有 n - 1 条边将中心节点与其他每个节点连接起来。
给你一个二维整数数组 edges ，其中 edges[i] = [ui, vi] 表示在节点 ui 和 vi 之间存在一条边。请你找出并返回 edges 所表示星型图的中心节点。
解析 这题太白给了，恰有n-1条边代表每个edge数组内都有一个相等的值
则只需要比较第一第二个数组即可
做法 时间复杂度: $ O(1) $
1 2 3 4 5 6 7 8 9 class Solution { public: int findCenter(vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt;&amp;amp; edges) { if(edges[0][0] == edges[1][0] || edges[0][0] == edges[1][1]){ return edges[0][0]; } return edges[0][1]; } };</description></item><item><title>20220215 每日一题 Leetcode1380 矩阵中的幸运数</title><link>https://blog.jhas.site/p/20220215-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode1380-%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E5%B9%B8%E8%BF%90%E6%95%B0/</link><pubDate>Tue, 15 Feb 2022 01:37:58 +0800</pubDate><guid>https://blog.jhas.site/p/20220215-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode1380-%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E5%B9%B8%E8%BF%90%E6%95%B0/</guid><description>1380. 矩阵中的幸运数 题面 给你一个 m * n 的矩阵，矩阵中的数字 各不相同 。请你按 任意 顺序返回矩阵中的所有幸运数。
幸运数是指矩阵中满足同时下列两个条件的元素：
在同一行的所有元素中最小 在同一列的所有元素中最大
解析 模拟就完事了
代码 时间复杂度: $ O(nm) $
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 class Solution { public: bool r[51],c[51]; vector&amp;lt;int&amp;gt; luckyNumbers (vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt;&amp;amp; matrix) { int n = matrix.size(); int m = matrix[0].</description></item><item><title>20220213 每日一题 Leetcode1189 气球的最大数量</title><link>https://blog.jhas.site/p/20220213-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode1189-%E6%B0%94%E7%90%83%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F/</link><pubDate>Sat, 12 Feb 2022 23:06:52 +0800</pubDate><guid>https://blog.jhas.site/p/20220213-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode1189-%E6%B0%94%E7%90%83%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F/</guid><description>1189. “气球” 的最大数量 题面 给你一个字符串 text，你需要使用 text 中的字母来拼凑尽可能多的单词 &amp;ldquo;balloon&amp;rdquo;（气球）。
字符串 text 中的每个字母最多只能被使用一次。请你返回最多可以拼凑出多少个单词 &amp;ldquo;balloon&amp;rdquo;。
解析 超级白给题,直接记录每一个小写字母大小，然后对应字母数量除以每个字母数量取最小值即可。
解法 时间复杂度:$O(n)$
1 2 3 4 5 6 7 8 9 10 11 12 class Solution { public: int maxNumberOfBalloons(string text) { int st[26] = {}; for(auto &amp;amp; c : text){ st[c - &amp;#39;a&amp;#39;]++; } st[&amp;#39;l&amp;#39; - &amp;#39;a&amp;#39;]/=2; st[&amp;#39;o&amp;#39; - &amp;#39;a&amp;#39;]/=2; return min(min(st[&amp;#39;b&amp;#39; - &amp;#39;a&amp;#39;],min(st[&amp;#39;l&amp;#39; - &amp;#39;a&amp;#39;],st[&amp;#39;o&amp;#39; - &amp;#39;a&amp;#39;])),min(st[0],st[&amp;#39;n&amp;#39; - &amp;#39;a&amp;#39;])); } }; 如果将balloon扩展到任意字符串，则为</description></item><item><title>20220211 每日一题 Leetcode1984 学生分数的最小差值</title><link>https://blog.jhas.site/p/20220211-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode1984-%E5%AD%A6%E7%94%9F%E5%88%86%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC/</link><pubDate>Fri, 11 Feb 2022 12:56:58 +0800</pubDate><guid>https://blog.jhas.site/p/20220211-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode1984-%E5%AD%A6%E7%94%9F%E5%88%86%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC/</guid><description>1984. 学生分数的最小差值 题面 给你一个 下标从 0 开始 的整数数组 $nums$ ，其中 $nums[i]$ 表示第 $i$ 名学生的分数。另给你一个整数 $k$ 。
从数组中选出任意 $k$ 名学生的分数，使这 $k$ 个分数间 最高分 和 最低分 的 差值 达到 最小化 。
返回可能的 最小差值 。
解析 若使$k$名学生的分数差值达到最小化，从$nums$取$k$个数，如果这$k$个数正好是最大最小数差值最小化，则$nums$必无其它数在这$k$个数之间。显然若使从$nums$取出任意$i$都满足从$i$后取$k$个数差值最小化，则数组必然有序。
解法 将数组排序然后枚举$i$滑动窗口即可
时间复杂度: $O( n \log n)$
1 2 3 4 5 6 7 8 9 10 11 12 class Solution { public: int minimumDifference(vector&amp;lt;int&amp;gt;&amp;amp; nums, int k) { int i,n = nums.size(),ans; sort(nums.begin(),nums.end()); ans = 100010; for(i = k - 1;i&amp;lt;n;i++){ ans = min(ans,nums[i] - nums[i - k + 1]); } return ans; } };</description></item><item><title>20220209 每日一题 Leetcode2006 差的绝对值为K的数对数目</title><link>https://blog.jhas.site/p/20220209-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode2006-%E5%B7%AE%E7%9A%84%E7%BB%9D%E5%AF%B9%E5%80%BC%E4%B8%BAk%E7%9A%84%E6%95%B0%E5%AF%B9%E6%95%B0%E7%9B%AE/</link><pubDate>Wed, 09 Feb 2022 20:42:21 +0800</pubDate><guid>https://blog.jhas.site/p/20220209-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode2006-%E5%B7%AE%E7%9A%84%E7%BB%9D%E5%AF%B9%E5%80%BC%E4%B8%BAk%E7%9A%84%E6%95%B0%E5%AF%B9%E6%95%B0%E7%9B%AE/</guid><description>2006. 差的绝对值为 K 的数对数目 题面 给你一个整数数组 nums 和一个整数 k ，请你返回数对 (i, j) 的数目，满足 i &amp;lt; j 且 |nums[i] - nums[j]| == k 。
|x| 的值定义为：
如果 x &amp;gt;= 0 ，那么值为 x 。 如果 x &amp;lt; 0 ，那么值为 -x 。
解析 题目非常白给，照着题目意思顺下去分析即可
对于 $$ |nums[i] - nums[j]| = k $$ 拆解后有两种可能 $$ nums[i] = k + nums[j] $$ 与 $$ nums[i] = nums[j] - k $$ 既对于任意 $ j $ 只需要统计到 $ i&amp;lt;j $ 的数目即可</description></item></channel></rss>